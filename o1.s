.thumb
.syntax unified

.include "gpio_constants.s"

.text
	.global Start

Start:

//SETUP
//LED
LDR r0, =GPIO_BASE + (PORT_SIZE * LED_PORT) //LED PORT ADDRESS
LDR r1, =GPIO_PORT_DOUTSET //OFFSET TO SET REGISTER
LDR r2, =GPIO_PORT_DOUTCLR //OFFSET TO CLEAR REGISTER
ADD r3, r0, r1 //MEMORY ADDRESS TO SET PORT
ADD r4, r0, r2 //MEMORY ADDRESS TO CLEAR PORT

//BUTTON
LDR r0, =GPIO_BASE + (PORT_SIZE * BUTTON_PORT) //BUTTON PORT ADRESS
LDR r1, =GPIO_PORT_DIN //OFFSET TO READ REGISTER
ADD r2, r0,r1 //MEMORY ADDRESS TO READ BUTTON

//VALUES
LDR r11, =1 << LED_PIN //VALUE TO SET LED
LDR r12, =1 << BUTTON_PIN //VALUE TO READ BUTTON

//LOOP
loop:
//READ BUTTON
LDR r5, [r2] //LOAD VALUE OF READ REGISTER
AND r5, r5, r12 //MASK OUT BUTTON PIN
CMP r5, r12 //COMPARE MASKED RESULT TO VALUE TO READ BUTTON
BNE on //JUMP TO ON NOT EQUAL (PULL UP 0 = pressed, 1 = released)

off:
STR r11, [r4] //WRITE LED SET VALUE TO CLEAR REGISTER
B loop //JUMP UNCONDITIONALLY TO LOOP

on:
STR r11, [r3] //WRITE LED SET VALUE TO SET REGISTER
B loop //JUMP UNCONDITIONALLY TO LOOP

NOP

